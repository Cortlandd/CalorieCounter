var _user$project$Main$initModel = {calories: 0, input: 0, error: _elm_lang$core$Maybe$Nothing};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'AddCalorie':
				return _elm_lang$core$Native_Utils.update(
					model,
					{calories: model.calories + model.input, input: 0});
			case 'Input':
				var _p1 = _elm_lang$core$String$toInt(_p0._0);
				if (_p1.ctor === 'Ok') {
					return _elm_lang$core$Native_Utils.update(
						model,
						{input: _p1._0, error: _elm_lang$core$Maybe$Nothing});
				} else {
					return _elm_lang$core$Native_Utils.update(
						model,
						{
							input: 0,
							error: _elm_lang$core$Maybe$Just(_p1._0)
						});
				}
			default:
				return _user$project$Main$initModel;
		}
	});
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {calories: a, input: b, error: c};
	});
var _user$project$Main$Clear = {ctor: 'Clear'};
var _user$project$Main$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _user$project$Main$AddCalorie = {ctor: 'AddCalorie'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h3,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Total Calories: ',
							_elm_lang$core$Basics$toString(model)))
					])),
				A2(
				_elm_lang$html$Html$input,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('text'),
						_elm_lang$html$Html_Events$onInput(_user$project$Main$Input),
						_elm_lang$html$Html_Attributes$value(
						_elm_lang$core$Native_Utils.eq(model.input, 0) ? '' : _elm_lang$core$Basics$toString(model.input))
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						A2(_elm_lang$core$Maybe$withDefault, '', model.error))
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('button'),
						_elm_lang$html$Html_Events$onClick(_user$project$Main$AddCalorie)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Add')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$type$('button'),
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Clear)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Clear')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$beginnerProgram(
		{model: _user$project$Main$initModel, update: _user$project$Main$update, view: _user$project$Main$view})
};
